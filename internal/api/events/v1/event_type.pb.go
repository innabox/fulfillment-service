//
// Copyright (c) 2025 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: events/v1/event_type.proto

//go:build !protoopaque

package eventsv1

import (
	v1 "github.com/innabox/fulfillment-service/internal/api/fulfillment/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	// Unspecified means that the even type is unknown.
	EventType_EVENT_TYPE_UNSPECIFIED EventType = 0
	// Means that a new object has been created.
	//
	// The payload will contain the representation of the object.
	EventType_EVENT_TYPE_OBJECT_CREATED EventType = 1
	// Means that an existing object has been modified.
	//
	// The payload will contain the updated representation of the object.
	EventType_EVENT_TYPE_OBJECT_UPDATED EventType = 2
	// Means that an object has been deleted.
	//
	// The payload will contain the representation of the object right before it was deleted.
	EventType_EVENT_TYPE_OBJECT_DELETED EventType = 3
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EVENT_TYPE_UNSPECIFIED",
		1: "EVENT_TYPE_OBJECT_CREATED",
		2: "EVENT_TYPE_OBJECT_UPDATED",
		3: "EVENT_TYPE_OBJECT_DELETED",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED":    0,
		"EVENT_TYPE_OBJECT_CREATED": 1,
		"EVENT_TYPE_OBJECT_UPDATED": 2,
		"EVENT_TYPE_OBJECT_DELETED": 3,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_events_v1_event_type_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_events_v1_event_type_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Represents events delivered by the server.
type Event struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Unique identifier of the event.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Type of event.
	Type EventType `protobuf:"varint,2,opt,name=type,proto3,enum=events.v1.EventType" json:"type,omitempty"`
	// Payload of the event.
	//
	// Types that are valid to be assigned to Payload:
	//
	//	*Event_Cluster
	//	*Event_ClusterOrder
	//	*Event_ClusterTemplate
	Payload       isEvent_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_events_v1_event_type_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_events_v1_event_type_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *Event) GetPayload() isEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Event) GetCluster() *v1.Cluster {
	if x != nil {
		if x, ok := x.Payload.(*Event_Cluster); ok {
			return x.Cluster
		}
	}
	return nil
}

func (x *Event) GetClusterOrder() *v1.ClusterOrder {
	if x != nil {
		if x, ok := x.Payload.(*Event_ClusterOrder); ok {
			return x.ClusterOrder
		}
	}
	return nil
}

func (x *Event) GetClusterTemplate() *v1.ClusterTemplate {
	if x != nil {
		if x, ok := x.Payload.(*Event_ClusterTemplate); ok {
			return x.ClusterTemplate
		}
	}
	return nil
}

func (x *Event) SetId(v string) {
	x.Id = v
}

func (x *Event) SetType(v EventType) {
	x.Type = v
}

func (x *Event) SetCluster(v *v1.Cluster) {
	if v == nil {
		x.Payload = nil
		return
	}
	x.Payload = &Event_Cluster{v}
}

func (x *Event) SetClusterOrder(v *v1.ClusterOrder) {
	if v == nil {
		x.Payload = nil
		return
	}
	x.Payload = &Event_ClusterOrder{v}
}

func (x *Event) SetClusterTemplate(v *v1.ClusterTemplate) {
	if v == nil {
		x.Payload = nil
		return
	}
	x.Payload = &Event_ClusterTemplate{v}
}

func (x *Event) HasPayload() bool {
	if x == nil {
		return false
	}
	return x.Payload != nil
}

func (x *Event) HasCluster() bool {
	if x == nil {
		return false
	}
	_, ok := x.Payload.(*Event_Cluster)
	return ok
}

func (x *Event) HasClusterOrder() bool {
	if x == nil {
		return false
	}
	_, ok := x.Payload.(*Event_ClusterOrder)
	return ok
}

func (x *Event) HasClusterTemplate() bool {
	if x == nil {
		return false
	}
	_, ok := x.Payload.(*Event_ClusterTemplate)
	return ok
}

func (x *Event) ClearPayload() {
	x.Payload = nil
}

func (x *Event) ClearCluster() {
	if _, ok := x.Payload.(*Event_Cluster); ok {
		x.Payload = nil
	}
}

func (x *Event) ClearClusterOrder() {
	if _, ok := x.Payload.(*Event_ClusterOrder); ok {
		x.Payload = nil
	}
}

func (x *Event) ClearClusterTemplate() {
	if _, ok := x.Payload.(*Event_ClusterTemplate); ok {
		x.Payload = nil
	}
}

const Event_Payload_not_set_case case_Event_Payload = 0
const Event_Cluster_case case_Event_Payload = 3
const Event_ClusterOrder_case case_Event_Payload = 4
const Event_ClusterTemplate_case case_Event_Payload = 5

func (x *Event) WhichPayload() case_Event_Payload {
	if x == nil {
		return Event_Payload_not_set_case
	}
	switch x.Payload.(type) {
	case *Event_Cluster:
		return Event_Cluster_case
	case *Event_ClusterOrder:
		return Event_ClusterOrder_case
	case *Event_ClusterTemplate:
		return Event_ClusterTemplate_case
	default:
		return Event_Payload_not_set_case
	}
}

type Event_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique identifier of the event.
	Id string
	// Type of event.
	Type EventType
	// Payload of the event.

	// Fields of oneof Payload:
	Cluster         *v1.Cluster
	ClusterOrder    *v1.ClusterOrder
	ClusterTemplate *v1.ClusterTemplate
	// -- end of Payload
}

func (b0 Event_builder) Build() *Event {
	m0 := &Event{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	x.Type = b.Type
	if b.Cluster != nil {
		x.Payload = &Event_Cluster{b.Cluster}
	}
	if b.ClusterOrder != nil {
		x.Payload = &Event_ClusterOrder{b.ClusterOrder}
	}
	if b.ClusterTemplate != nil {
		x.Payload = &Event_ClusterTemplate{b.ClusterTemplate}
	}
	return m0
}

type case_Event_Payload protoreflect.FieldNumber

func (x case_Event_Payload) String() string {
	md := file_events_v1_event_type_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isEvent_Payload interface {
	isEvent_Payload()
}

type Event_Cluster struct {
	Cluster *v1.Cluster `protobuf:"bytes,3,opt,name=cluster,proto3,oneof"`
}

type Event_ClusterOrder struct {
	ClusterOrder *v1.ClusterOrder `protobuf:"bytes,4,opt,name=cluster_order,json=clusterOrder,proto3,oneof"`
}

type Event_ClusterTemplate struct {
	ClusterTemplate *v1.ClusterTemplate `protobuf:"bytes,5,opt,name=cluster_template,json=clusterTemplate,proto3,oneof"`
}

func (*Event_Cluster) isEvent_Payload() {}

func (*Event_ClusterOrder) isEvent_Payload() {}

func (*Event_ClusterTemplate) isEvent_Payload() {}

var File_events_v1_event_type_proto protoreflect.FileDescriptor

var file_events_v1_event_type_proto_rawDesc = string([]byte{
	0x0a, 0x1a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x27, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2a, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x66, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x94, 0x02, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x4c, 0x0a,
	0x10, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2a, 0x84, 0x01, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x1d, 0x0a, 0x19, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f,
	0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x1d, 0x0a, 0x19, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x42,
	0x4a, 0x45, 0x43, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1d,
	0x0a, 0x19, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x42, 0x4a,
	0x45, 0x43, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x42, 0xac, 0x01,
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x42,
	0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e,
	0x6e, 0x61, 0x62, 0x6f, 0x78, 0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31,
	0x3b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x45, 0x58, 0x58, 0xaa,
	0x02, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x09, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var file_events_v1_event_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_events_v1_event_type_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_events_v1_event_type_proto_goTypes = []any{
	(EventType)(0),             // 0: events.v1.EventType
	(*Event)(nil),              // 1: events.v1.Event
	(*v1.Cluster)(nil),         // 2: fulfillment.v1.Cluster
	(*v1.ClusterOrder)(nil),    // 3: fulfillment.v1.ClusterOrder
	(*v1.ClusterTemplate)(nil), // 4: fulfillment.v1.ClusterTemplate
}
var file_events_v1_event_type_proto_depIdxs = []int32{
	0, // 0: events.v1.Event.type:type_name -> events.v1.EventType
	2, // 1: events.v1.Event.cluster:type_name -> fulfillment.v1.Cluster
	3, // 2: events.v1.Event.cluster_order:type_name -> fulfillment.v1.ClusterOrder
	4, // 3: events.v1.Event.cluster_template:type_name -> fulfillment.v1.ClusterTemplate
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_events_v1_event_type_proto_init() }
func file_events_v1_event_type_proto_init() {
	if File_events_v1_event_type_proto != nil {
		return
	}
	file_events_v1_event_type_proto_msgTypes[0].OneofWrappers = []any{
		(*Event_Cluster)(nil),
		(*Event_ClusterOrder)(nil),
		(*Event_ClusterTemplate)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_events_v1_event_type_proto_rawDesc), len(file_events_v1_event_type_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_events_v1_event_type_proto_goTypes,
		DependencyIndexes: file_events_v1_event_type_proto_depIdxs,
		EnumInfos:         file_events_v1_event_type_proto_enumTypes,
		MessageInfos:      file_events_v1_event_type_proto_msgTypes,
	}.Build()
	File_events_v1_event_type_proto = out.File
	file_events_v1_event_type_proto_goTypes = nil
	file_events_v1_event_type_proto_depIdxs = nil
}
