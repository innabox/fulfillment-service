//
// Copyright (c) 2025 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: fulfillment/v1/cluster_templates_service.proto

//go:build protoopaque

package fulfillmentv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClusterTemplatesListRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Offset      int32                  `protobuf:"varint,1,opt,name=offset,proto3,oneof"`
	xxx_hidden_Limit       int32                  `protobuf:"varint,2,opt,name=limit,proto3,oneof"`
	xxx_hidden_Filter      *string                `protobuf:"bytes,3,opt,name=filter,proto3,oneof"`
	xxx_hidden_Order       *string                `protobuf:"bytes,4,opt,name=order,proto3,oneof"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ClusterTemplatesListRequest) Reset() {
	*x = ClusterTemplatesListRequest{}
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterTemplatesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterTemplatesListRequest) ProtoMessage() {}

func (x *ClusterTemplatesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterTemplatesListRequest) GetOffset() int32 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *ClusterTemplatesListRequest) GetLimit() int32 {
	if x != nil {
		return x.xxx_hidden_Limit
	}
	return 0
}

func (x *ClusterTemplatesListRequest) GetFilter() string {
	if x != nil {
		if x.xxx_hidden_Filter != nil {
			return *x.xxx_hidden_Filter
		}
		return ""
	}
	return ""
}

func (x *ClusterTemplatesListRequest) GetOrder() string {
	if x != nil {
		if x.xxx_hidden_Order != nil {
			return *x.xxx_hidden_Order
		}
		return ""
	}
	return ""
}

func (x *ClusterTemplatesListRequest) SetOffset(v int32) {
	x.xxx_hidden_Offset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ClusterTemplatesListRequest) SetLimit(v int32) {
	x.xxx_hidden_Limit = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ClusterTemplatesListRequest) SetFilter(v string) {
	x.xxx_hidden_Filter = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ClusterTemplatesListRequest) SetOrder(v string) {
	x.xxx_hidden_Order = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ClusterTemplatesListRequest) HasOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ClusterTemplatesListRequest) HasLimit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ClusterTemplatesListRequest) HasFilter() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ClusterTemplatesListRequest) HasOrder() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ClusterTemplatesListRequest) ClearOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Offset = 0
}

func (x *ClusterTemplatesListRequest) ClearLimit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Limit = 0
}

func (x *ClusterTemplatesListRequest) ClearFilter() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Filter = nil
}

func (x *ClusterTemplatesListRequest) ClearOrder() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Order = nil
}

type ClusterTemplatesListRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Index of the first result. If not specified the default value will be zero.
	Offset *int32
	// Maximum number of results to be returned by the server. When not specified all the results will be returned. Note
	// that there may not be enough results to return, and that the server may decide, for performance reasons, to return
	// less results than requested.
	Limit *int32
	// Filter criteria.
	//
	// The syntax of this parameter is similar to the syntax of the _where_ clause of a SQL statement, but using the names
	// of the attributes of the template instead of the names of the columns of a table. For example, in order to retrieve
	// all the templates with a title starting with `large` the value should be:
	//
	//	title like 'large%'
	//
	// If this isn't provided, or if the value is empty, then all the templates that the user has permission to see will
	// be returned.
	Filter *string
	// Order criteria.
	//
	// The syntax of this parameter is similar to the syntax of the _order by_ clause of a SQL statement, but using the
	// names of the attributes of the templated instead of the names of the columns of a table. For example, in order to
	// sort the templates descending by title the value should be:
	//
	//	name desc
	//
	// If the parameter isn't provided, or if the value is empty, then the order of the results is undefined.
	Order *string
}

func (b0 ClusterTemplatesListRequest_builder) Build() *ClusterTemplatesListRequest {
	m0 := &ClusterTemplatesListRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Offset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Offset = *b.Offset
	}
	if b.Limit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Limit = *b.Limit
	}
	if b.Filter != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Filter = b.Filter
	}
	if b.Order != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Order = b.Order
	}
	return m0
}

type ClusterTemplatesListResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Size        int32                  `protobuf:"varint,3,opt,name=size,proto3,oneof"`
	xxx_hidden_Total       int32                  `protobuf:"varint,4,opt,name=total,proto3,oneof"`
	xxx_hidden_Items       *[]*ClusterTemplate    `protobuf:"bytes,5,rep,name=items,proto3"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ClusterTemplatesListResponse) Reset() {
	*x = ClusterTemplatesListResponse{}
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterTemplatesListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterTemplatesListResponse) ProtoMessage() {}

func (x *ClusterTemplatesListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterTemplatesListResponse) GetSize() int32 {
	if x != nil {
		return x.xxx_hidden_Size
	}
	return 0
}

func (x *ClusterTemplatesListResponse) GetTotal() int32 {
	if x != nil {
		return x.xxx_hidden_Total
	}
	return 0
}

func (x *ClusterTemplatesListResponse) GetItems() []*ClusterTemplate {
	if x != nil {
		if x.xxx_hidden_Items != nil {
			return *x.xxx_hidden_Items
		}
	}
	return nil
}

func (x *ClusterTemplatesListResponse) SetSize(v int32) {
	x.xxx_hidden_Size = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ClusterTemplatesListResponse) SetTotal(v int32) {
	x.xxx_hidden_Total = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ClusterTemplatesListResponse) SetItems(v []*ClusterTemplate) {
	x.xxx_hidden_Items = &v
}

func (x *ClusterTemplatesListResponse) HasSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ClusterTemplatesListResponse) HasTotal() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ClusterTemplatesListResponse) ClearSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Size = 0
}

func (x *ClusterTemplatesListResponse) ClearTotal() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Total = 0
}

type ClusterTemplatesListResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Actual number of items returned. Note that this may be smaller than the value requested in the `limit` parameter
	// of the request if there are not enough items, or of the system decides that returning that number of items isn't
	// feasible or convenient for performance reasons.
	Size *int32
	// Total number of items of the collection that match the search criteria, regardless of the number of results
	// requested with the `limit` parameter.
	Total *int32
	// List of results.
	Items []*ClusterTemplate
}

func (b0 ClusterTemplatesListResponse_builder) Build() *ClusterTemplatesListResponse {
	m0 := &ClusterTemplatesListResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Size != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Size = *b.Size
	}
	if b.Total != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Total = *b.Total
	}
	x.xxx_hidden_Items = &b.Items
	return m0
}

type ClusterTemplatesGetRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id string                 `protobuf:"bytes,1,opt,name=id,proto3"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterTemplatesGetRequest) Reset() {
	*x = ClusterTemplatesGetRequest{}
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterTemplatesGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterTemplatesGetRequest) ProtoMessage() {}

func (x *ClusterTemplatesGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterTemplatesGetRequest) GetId() string {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return ""
}

func (x *ClusterTemplatesGetRequest) SetId(v string) {
	x.xxx_hidden_Id = v
}

type ClusterTemplatesGetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id string
}

func (b0 ClusterTemplatesGetRequest_builder) Build() *ClusterTemplatesGetRequest {
	m0 := &ClusterTemplatesGetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	return m0
}

type ClusterTemplatesGetResponse struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Object *ClusterTemplate       `protobuf:"bytes,1,opt,name=object,proto3"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ClusterTemplatesGetResponse) Reset() {
	*x = ClusterTemplatesGetResponse{}
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterTemplatesGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterTemplatesGetResponse) ProtoMessage() {}

func (x *ClusterTemplatesGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterTemplatesGetResponse) GetObject() *ClusterTemplate {
	if x != nil {
		return x.xxx_hidden_Object
	}
	return nil
}

func (x *ClusterTemplatesGetResponse) SetObject(v *ClusterTemplate) {
	x.xxx_hidden_Object = v
}

func (x *ClusterTemplatesGetResponse) HasObject() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Object != nil
}

func (x *ClusterTemplatesGetResponse) ClearObject() {
	x.xxx_hidden_Object = nil
}

type ClusterTemplatesGetResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Object *ClusterTemplate
}

func (b0 ClusterTemplatesGetResponse_builder) Build() *ClusterTemplatesGetResponse {
	m0 := &ClusterTemplatesGetResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Object = b.Object
	return m0
}

type ClusterTemplatesCreateRequest struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Object *ClusterTemplate       `protobuf:"bytes,1,opt,name=object,proto3"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ClusterTemplatesCreateRequest) Reset() {
	*x = ClusterTemplatesCreateRequest{}
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterTemplatesCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterTemplatesCreateRequest) ProtoMessage() {}

func (x *ClusterTemplatesCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterTemplatesCreateRequest) GetObject() *ClusterTemplate {
	if x != nil {
		return x.xxx_hidden_Object
	}
	return nil
}

func (x *ClusterTemplatesCreateRequest) SetObject(v *ClusterTemplate) {
	x.xxx_hidden_Object = v
}

func (x *ClusterTemplatesCreateRequest) HasObject() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Object != nil
}

func (x *ClusterTemplatesCreateRequest) ClearObject() {
	x.xxx_hidden_Object = nil
}

type ClusterTemplatesCreateRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Object *ClusterTemplate
}

func (b0 ClusterTemplatesCreateRequest_builder) Build() *ClusterTemplatesCreateRequest {
	m0 := &ClusterTemplatesCreateRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Object = b.Object
	return m0
}

type ClusterTemplatesCreateResponse struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Object *ClusterTemplate       `protobuf:"bytes,1,opt,name=object,proto3"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ClusterTemplatesCreateResponse) Reset() {
	*x = ClusterTemplatesCreateResponse{}
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterTemplatesCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterTemplatesCreateResponse) ProtoMessage() {}

func (x *ClusterTemplatesCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterTemplatesCreateResponse) GetObject() *ClusterTemplate {
	if x != nil {
		return x.xxx_hidden_Object
	}
	return nil
}

func (x *ClusterTemplatesCreateResponse) SetObject(v *ClusterTemplate) {
	x.xxx_hidden_Object = v
}

func (x *ClusterTemplatesCreateResponse) HasObject() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Object != nil
}

func (x *ClusterTemplatesCreateResponse) ClearObject() {
	x.xxx_hidden_Object = nil
}

type ClusterTemplatesCreateResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Object *ClusterTemplate
}

func (b0 ClusterTemplatesCreateResponse_builder) Build() *ClusterTemplatesCreateResponse {
	m0 := &ClusterTemplatesCreateResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Object = b.Object
	return m0
}

type ClusterTemplatesUpdateRequest struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Object     *ClusterTemplate       `protobuf:"bytes,1,opt,name=object,proto3"`
	xxx_hidden_UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ClusterTemplatesUpdateRequest) Reset() {
	*x = ClusterTemplatesUpdateRequest{}
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterTemplatesUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterTemplatesUpdateRequest) ProtoMessage() {}

func (x *ClusterTemplatesUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterTemplatesUpdateRequest) GetObject() *ClusterTemplate {
	if x != nil {
		return x.xxx_hidden_Object
	}
	return nil
}

func (x *ClusterTemplatesUpdateRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.xxx_hidden_UpdateMask
	}
	return nil
}

func (x *ClusterTemplatesUpdateRequest) SetObject(v *ClusterTemplate) {
	x.xxx_hidden_Object = v
}

func (x *ClusterTemplatesUpdateRequest) SetUpdateMask(v *fieldmaskpb.FieldMask) {
	x.xxx_hidden_UpdateMask = v
}

func (x *ClusterTemplatesUpdateRequest) HasObject() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Object != nil
}

func (x *ClusterTemplatesUpdateRequest) HasUpdateMask() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_UpdateMask != nil
}

func (x *ClusterTemplatesUpdateRequest) ClearObject() {
	x.xxx_hidden_Object = nil
}

func (x *ClusterTemplatesUpdateRequest) ClearUpdateMask() {
	x.xxx_hidden_UpdateMask = nil
}

type ClusterTemplatesUpdateRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Object     *ClusterTemplate
	UpdateMask *fieldmaskpb.FieldMask
}

func (b0 ClusterTemplatesUpdateRequest_builder) Build() *ClusterTemplatesUpdateRequest {
	m0 := &ClusterTemplatesUpdateRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Object = b.Object
	x.xxx_hidden_UpdateMask = b.UpdateMask
	return m0
}

type ClusterTemplatesUpdateResponse struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Object *ClusterTemplate       `protobuf:"bytes,1,opt,name=object,proto3"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ClusterTemplatesUpdateResponse) Reset() {
	*x = ClusterTemplatesUpdateResponse{}
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterTemplatesUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterTemplatesUpdateResponse) ProtoMessage() {}

func (x *ClusterTemplatesUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterTemplatesUpdateResponse) GetObject() *ClusterTemplate {
	if x != nil {
		return x.xxx_hidden_Object
	}
	return nil
}

func (x *ClusterTemplatesUpdateResponse) SetObject(v *ClusterTemplate) {
	x.xxx_hidden_Object = v
}

func (x *ClusterTemplatesUpdateResponse) HasObject() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Object != nil
}

func (x *ClusterTemplatesUpdateResponse) ClearObject() {
	x.xxx_hidden_Object = nil
}

type ClusterTemplatesUpdateResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Object *ClusterTemplate
}

func (b0 ClusterTemplatesUpdateResponse_builder) Build() *ClusterTemplatesUpdateResponse {
	m0 := &ClusterTemplatesUpdateResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Object = b.Object
	return m0
}

type ClusterTemplatesDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id string                 `protobuf:"bytes,1,opt,name=id,proto3"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterTemplatesDeleteRequest) Reset() {
	*x = ClusterTemplatesDeleteRequest{}
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterTemplatesDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterTemplatesDeleteRequest) ProtoMessage() {}

func (x *ClusterTemplatesDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterTemplatesDeleteRequest) GetId() string {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return ""
}

func (x *ClusterTemplatesDeleteRequest) SetId(v string) {
	x.xxx_hidden_Id = v
}

type ClusterTemplatesDeleteRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id string
}

func (b0 ClusterTemplatesDeleteRequest_builder) Build() *ClusterTemplatesDeleteRequest {
	m0 := &ClusterTemplatesDeleteRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	return m0
}

type ClusterTemplatesDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClusterTemplatesDeleteResponse) Reset() {
	*x = ClusterTemplatesDeleteResponse{}
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterTemplatesDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterTemplatesDeleteResponse) ProtoMessage() {}

func (x *ClusterTemplatesDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_cluster_templates_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ClusterTemplatesDeleteResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ClusterTemplatesDeleteResponse_builder) Build() *ClusterTemplatesDeleteResponse {
	m0 := &ClusterTemplatesDeleteResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

var File_fulfillment_v1_cluster_templates_service_proto protoreflect.FileDescriptor

var file_fulfillment_v1_cluster_templates_service_proto_rawDesc = string([]byte{
	0x0a, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x1a, 0x2a, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x01, 0x0a,
	0x1b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x9c, 0x01, 0x0a, 0x1c, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x2c, 0x0a, 0x1a, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x1b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x58, 0x0a, 0x1d, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x59, 0x0a, 0x1e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0x95, 0x01, 0x0a, 0x1d, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x59, 0x0a, 0x1e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x22, 0x2f, 0x0a, 0x1d, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xbe, 0x06, 0x0a, 0x10, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x90, 0x01, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x9a,
	0x01, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x2a, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x62, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xa6, 0x01, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x3a, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x62, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x25, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x12, 0xb2, 0x01, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x2d, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x43, 0x3a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x62, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x32, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x69, 0x64, 0x7d, 0x12, 0x9b, 0x01, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x2a, 0x2a, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0xdd, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e,
	0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x1c,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x50,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x6e, 0x61, 0x62,
	0x6f, 0x78, 0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x76, 0x31, 0x3b, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x46, 0x58, 0x58, 0xaa, 0x02, 0x0e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1a, 0x46, 0x75, 0x6c, 0x66, 0x69,
	0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var file_fulfillment_v1_cluster_templates_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_fulfillment_v1_cluster_templates_service_proto_goTypes = []any{
	(*ClusterTemplatesListRequest)(nil),    // 0: fulfillment.v1.ClusterTemplatesListRequest
	(*ClusterTemplatesListResponse)(nil),   // 1: fulfillment.v1.ClusterTemplatesListResponse
	(*ClusterTemplatesGetRequest)(nil),     // 2: fulfillment.v1.ClusterTemplatesGetRequest
	(*ClusterTemplatesGetResponse)(nil),    // 3: fulfillment.v1.ClusterTemplatesGetResponse
	(*ClusterTemplatesCreateRequest)(nil),  // 4: fulfillment.v1.ClusterTemplatesCreateRequest
	(*ClusterTemplatesCreateResponse)(nil), // 5: fulfillment.v1.ClusterTemplatesCreateResponse
	(*ClusterTemplatesUpdateRequest)(nil),  // 6: fulfillment.v1.ClusterTemplatesUpdateRequest
	(*ClusterTemplatesUpdateResponse)(nil), // 7: fulfillment.v1.ClusterTemplatesUpdateResponse
	(*ClusterTemplatesDeleteRequest)(nil),  // 8: fulfillment.v1.ClusterTemplatesDeleteRequest
	(*ClusterTemplatesDeleteResponse)(nil), // 9: fulfillment.v1.ClusterTemplatesDeleteResponse
	(*ClusterTemplate)(nil),                // 10: fulfillment.v1.ClusterTemplate
	(*fieldmaskpb.FieldMask)(nil),          // 11: google.protobuf.FieldMask
}
var file_fulfillment_v1_cluster_templates_service_proto_depIdxs = []int32{
	10, // 0: fulfillment.v1.ClusterTemplatesListResponse.items:type_name -> fulfillment.v1.ClusterTemplate
	10, // 1: fulfillment.v1.ClusterTemplatesGetResponse.object:type_name -> fulfillment.v1.ClusterTemplate
	10, // 2: fulfillment.v1.ClusterTemplatesCreateRequest.object:type_name -> fulfillment.v1.ClusterTemplate
	10, // 3: fulfillment.v1.ClusterTemplatesCreateResponse.object:type_name -> fulfillment.v1.ClusterTemplate
	10, // 4: fulfillment.v1.ClusterTemplatesUpdateRequest.object:type_name -> fulfillment.v1.ClusterTemplate
	11, // 5: fulfillment.v1.ClusterTemplatesUpdateRequest.update_mask:type_name -> google.protobuf.FieldMask
	10, // 6: fulfillment.v1.ClusterTemplatesUpdateResponse.object:type_name -> fulfillment.v1.ClusterTemplate
	0,  // 7: fulfillment.v1.ClusterTemplates.List:input_type -> fulfillment.v1.ClusterTemplatesListRequest
	2,  // 8: fulfillment.v1.ClusterTemplates.Get:input_type -> fulfillment.v1.ClusterTemplatesGetRequest
	4,  // 9: fulfillment.v1.ClusterTemplates.Create:input_type -> fulfillment.v1.ClusterTemplatesCreateRequest
	6,  // 10: fulfillment.v1.ClusterTemplates.Update:input_type -> fulfillment.v1.ClusterTemplatesUpdateRequest
	8,  // 11: fulfillment.v1.ClusterTemplates.Delete:input_type -> fulfillment.v1.ClusterTemplatesDeleteRequest
	1,  // 12: fulfillment.v1.ClusterTemplates.List:output_type -> fulfillment.v1.ClusterTemplatesListResponse
	3,  // 13: fulfillment.v1.ClusterTemplates.Get:output_type -> fulfillment.v1.ClusterTemplatesGetResponse
	5,  // 14: fulfillment.v1.ClusterTemplates.Create:output_type -> fulfillment.v1.ClusterTemplatesCreateResponse
	7,  // 15: fulfillment.v1.ClusterTemplates.Update:output_type -> fulfillment.v1.ClusterTemplatesUpdateResponse
	9,  // 16: fulfillment.v1.ClusterTemplates.Delete:output_type -> fulfillment.v1.ClusterTemplatesDeleteResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_fulfillment_v1_cluster_templates_service_proto_init() }
func file_fulfillment_v1_cluster_templates_service_proto_init() {
	if File_fulfillment_v1_cluster_templates_service_proto != nil {
		return
	}
	file_fulfillment_v1_cluster_template_type_proto_init()
	file_fulfillment_v1_cluster_templates_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_fulfillment_v1_cluster_templates_service_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fulfillment_v1_cluster_templates_service_proto_rawDesc), len(file_fulfillment_v1_cluster_templates_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fulfillment_v1_cluster_templates_service_proto_goTypes,
		DependencyIndexes: file_fulfillment_v1_cluster_templates_service_proto_depIdxs,
		MessageInfos:      file_fulfillment_v1_cluster_templates_service_proto_msgTypes,
	}.Build()
	File_fulfillment_v1_cluster_templates_service_proto = out.File
	file_fulfillment_v1_cluster_templates_service_proto_goTypes = nil
	file_fulfillment_v1_cluster_templates_service_proto_depIdxs = nil
}
