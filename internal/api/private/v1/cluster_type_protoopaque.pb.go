//
// Copyright (c) 2025 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: private/v1/cluster_type.proto

//go:build protoopaque

package privatev1

import (
	v1 "github.com/innabox/fulfillment-service/internal/api/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClusterState int32

const (
	ClusterState_CLUSTER_STATE_UNSPECIFIED ClusterState = 0
	ClusterState_CLUSTER_STATE_PROGRESSING ClusterState = 1
	ClusterState_CLUSTER_STATE_READY       ClusterState = 2
	ClusterState_CLUSTER_STATE_FAILED      ClusterState = 3
)

// Enum value maps for ClusterState.
var (
	ClusterState_name = map[int32]string{
		0: "CLUSTER_STATE_UNSPECIFIED",
		1: "CLUSTER_STATE_PROGRESSING",
		2: "CLUSTER_STATE_READY",
		3: "CLUSTER_STATE_FAILED",
	}
	ClusterState_value = map[string]int32{
		"CLUSTER_STATE_UNSPECIFIED": 0,
		"CLUSTER_STATE_PROGRESSING": 1,
		"CLUSTER_STATE_READY":       2,
		"CLUSTER_STATE_FAILED":      3,
	}
)

func (x ClusterState) Enum() *ClusterState {
	p := new(ClusterState)
	*p = x
	return p
}

func (x ClusterState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusterState) Descriptor() protoreflect.EnumDescriptor {
	return file_private_v1_cluster_type_proto_enumTypes[0].Descriptor()
}

func (ClusterState) Type() protoreflect.EnumType {
	return &file_private_v1_cluster_type_proto_enumTypes[0]
}

func (x ClusterState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ClusterConditionType int32

const (
	ClusterConditionType_CLUSTER_CONDITION_TYPE_UNSPECIFIED ClusterConditionType = 0
	ClusterConditionType_CLUSTER_CONDITION_TYPE_PROGRESSING ClusterConditionType = 1
	ClusterConditionType_CLUSTER_CONDITION_TYPE_READY       ClusterConditionType = 2
	ClusterConditionType_CLUSTER_CONDITION_TYPE_FAILED      ClusterConditionType = 3
	ClusterConditionType_CLUSTER_CONDITION_TYPE_DEGRADED    ClusterConditionType = 4
)

// Enum value maps for ClusterConditionType.
var (
	ClusterConditionType_name = map[int32]string{
		0: "CLUSTER_CONDITION_TYPE_UNSPECIFIED",
		1: "CLUSTER_CONDITION_TYPE_PROGRESSING",
		2: "CLUSTER_CONDITION_TYPE_READY",
		3: "CLUSTER_CONDITION_TYPE_FAILED",
		4: "CLUSTER_CONDITION_TYPE_DEGRADED",
	}
	ClusterConditionType_value = map[string]int32{
		"CLUSTER_CONDITION_TYPE_UNSPECIFIED": 0,
		"CLUSTER_CONDITION_TYPE_PROGRESSING": 1,
		"CLUSTER_CONDITION_TYPE_READY":       2,
		"CLUSTER_CONDITION_TYPE_FAILED":      3,
		"CLUSTER_CONDITION_TYPE_DEGRADED":    4,
	}
)

func (x ClusterConditionType) Enum() *ClusterConditionType {
	p := new(ClusterConditionType)
	*p = x
	return p
}

func (x ClusterConditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusterConditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_private_v1_cluster_type_proto_enumTypes[1].Descriptor()
}

func (ClusterConditionType) Type() protoreflect.EnumType {
	return &file_private_v1_cluster_type_proto_enumTypes[1]
}

func (x ClusterConditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Contains the details about the cluster that are available only for the system.
type Cluster struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id       string                 `protobuf:"bytes,1,opt,name=id,proto3"`
	xxx_hidden_Metadata *Metadata              `protobuf:"bytes,2,opt,name=metadata,proto3"`
	xxx_hidden_Spec     *ClusterSpec           `protobuf:"bytes,3,opt,name=spec,proto3"`
	xxx_hidden_Status   *ClusterStatus         `protobuf:"bytes,4,opt,name=status,proto3"`
	xxx_hidden_HubId    string                 `protobuf:"bytes,5,opt,name=hub_id,json=hubId,proto3"`
	xxx_hidden_OrderId  string                 `protobuf:"bytes,6,opt,name=order_id,json=orderId,proto3"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	mi := &file_private_v1_cluster_type_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_cluster_type_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Cluster) GetId() string {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return ""
}

func (x *Cluster) GetMetadata() *Metadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *Cluster) GetSpec() *ClusterSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *Cluster) GetStatus() *ClusterStatus {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *Cluster) GetHubId() string {
	if x != nil {
		return x.xxx_hidden_HubId
	}
	return ""
}

func (x *Cluster) GetOrderId() string {
	if x != nil {
		return x.xxx_hidden_OrderId
	}
	return ""
}

func (x *Cluster) SetId(v string) {
	x.xxx_hidden_Id = v
}

func (x *Cluster) SetMetadata(v *Metadata) {
	x.xxx_hidden_Metadata = v
}

func (x *Cluster) SetSpec(v *ClusterSpec) {
	x.xxx_hidden_Spec = v
}

func (x *Cluster) SetStatus(v *ClusterStatus) {
	x.xxx_hidden_Status = v
}

func (x *Cluster) SetHubId(v string) {
	x.xxx_hidden_HubId = v
}

func (x *Cluster) SetOrderId(v string) {
	x.xxx_hidden_OrderId = v
}

func (x *Cluster) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *Cluster) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *Cluster) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *Cluster) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *Cluster) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *Cluster) ClearStatus() {
	x.xxx_hidden_Status = nil
}

type Cluster_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Public data.
	Id       string
	Metadata *Metadata
	Spec     *ClusterSpec
	Status   *ClusterStatus
	// Identifier of the hub that was selected for this cluster.
	HubId string
	// Identifier of the cluster order that was originally used to create this cluster.
	//
	// This is needed because the way to find the Kubernetes `ClusterOrder` object corresponding to this cluster is to
	// use the `.../clusterorder-uuid` label that was set when it was created, and that contains the identifier of the
	// cluster order because at that point there is no cluster yet.
	OrderId string
}

func (b0 Cluster_builder) Build() *Cluster {
	m0 := &Cluster{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	x.xxx_hidden_Metadata = b.Metadata
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_Status = b.Status
	x.xxx_hidden_HubId = b.HubId
	x.xxx_hidden_OrderId = b.OrderId
	return m0
}

type ClusterSpec struct {
	state               protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_NodeSets map[string]*ClusterNodeSet `protobuf:"bytes,1,rep,name=node_sets,json=nodeSets,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ClusterSpec) Reset() {
	*x = ClusterSpec{}
	mi := &file_private_v1_cluster_type_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSpec) ProtoMessage() {}

func (x *ClusterSpec) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_cluster_type_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterSpec) GetNodeSets() map[string]*ClusterNodeSet {
	if x != nil {
		return x.xxx_hidden_NodeSets
	}
	return nil
}

func (x *ClusterSpec) SetNodeSets(v map[string]*ClusterNodeSet) {
	x.xxx_hidden_NodeSets = v
}

type ClusterSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	NodeSets map[string]*ClusterNodeSet
}

func (b0 ClusterSpec_builder) Build() *ClusterSpec {
	m0 := &ClusterSpec{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_NodeSets = b.NodeSets
	return m0
}

type ClusterStatus struct {
	state                 protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_State      ClusterState               `protobuf:"varint,1,opt,name=state,proto3,enum=private.v1.ClusterState"`
	xxx_hidden_Conditions *[]*ClusterCondition       `protobuf:"bytes,2,rep,name=conditions,proto3"`
	xxx_hidden_ApiUrl     string                     `protobuf:"bytes,3,opt,name=api_url,json=apiUrl,proto3"`
	xxx_hidden_ConsoleUrl string                     `protobuf:"bytes,4,opt,name=console_url,json=consoleUrl,proto3"`
	xxx_hidden_NodeSets   map[string]*ClusterNodeSet `protobuf:"bytes,5,rep,name=node_sets,json=nodeSets,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ClusterStatus) Reset() {
	*x = ClusterStatus{}
	mi := &file_private_v1_cluster_type_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatus) ProtoMessage() {}

func (x *ClusterStatus) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_cluster_type_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterStatus) GetState() ClusterState {
	if x != nil {
		return x.xxx_hidden_State
	}
	return ClusterState_CLUSTER_STATE_UNSPECIFIED
}

func (x *ClusterStatus) GetConditions() []*ClusterCondition {
	if x != nil {
		if x.xxx_hidden_Conditions != nil {
			return *x.xxx_hidden_Conditions
		}
	}
	return nil
}

func (x *ClusterStatus) GetApiUrl() string {
	if x != nil {
		return x.xxx_hidden_ApiUrl
	}
	return ""
}

func (x *ClusterStatus) GetConsoleUrl() string {
	if x != nil {
		return x.xxx_hidden_ConsoleUrl
	}
	return ""
}

func (x *ClusterStatus) GetNodeSets() map[string]*ClusterNodeSet {
	if x != nil {
		return x.xxx_hidden_NodeSets
	}
	return nil
}

func (x *ClusterStatus) SetState(v ClusterState) {
	x.xxx_hidden_State = v
}

func (x *ClusterStatus) SetConditions(v []*ClusterCondition) {
	x.xxx_hidden_Conditions = &v
}

func (x *ClusterStatus) SetApiUrl(v string) {
	x.xxx_hidden_ApiUrl = v
}

func (x *ClusterStatus) SetConsoleUrl(v string) {
	x.xxx_hidden_ConsoleUrl = v
}

func (x *ClusterStatus) SetNodeSets(v map[string]*ClusterNodeSet) {
	x.xxx_hidden_NodeSets = v
}

type ClusterStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	State      ClusterState
	Conditions []*ClusterCondition
	ApiUrl     string
	ConsoleUrl string
	NodeSets   map[string]*ClusterNodeSet
}

func (b0 ClusterStatus_builder) Build() *ClusterStatus {
	m0 := &ClusterStatus{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_State = b.State
	x.xxx_hidden_Conditions = &b.Conditions
	x.xxx_hidden_ApiUrl = b.ApiUrl
	x.xxx_hidden_ConsoleUrl = b.ConsoleUrl
	x.xxx_hidden_NodeSets = b.NodeSets
	return m0
}

type ClusterCondition struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type               ClusterConditionType   `protobuf:"varint,1,opt,name=type,proto3,enum=private.v1.ClusterConditionType"`
	xxx_hidden_Status             v1.ConditionStatus     `protobuf:"varint,2,opt,name=status,proto3,enum=shared.v1.ConditionStatus"`
	xxx_hidden_LastTransitionTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_transition_time,json=lastTransitionTime,proto3"`
	xxx_hidden_Reason             *string                `protobuf:"bytes,4,opt,name=reason,proto3,oneof"`
	xxx_hidden_Message            *string                `protobuf:"bytes,5,opt,name=message,proto3,oneof"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ClusterCondition) Reset() {
	*x = ClusterCondition{}
	mi := &file_private_v1_cluster_type_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterCondition) ProtoMessage() {}

func (x *ClusterCondition) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_cluster_type_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterCondition) GetType() ClusterConditionType {
	if x != nil {
		return x.xxx_hidden_Type
	}
	return ClusterConditionType_CLUSTER_CONDITION_TYPE_UNSPECIFIED
}

func (x *ClusterCondition) GetStatus() v1.ConditionStatus {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return v1.ConditionStatus(0)
}

func (x *ClusterCondition) GetLastTransitionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastTransitionTime
	}
	return nil
}

func (x *ClusterCondition) GetReason() string {
	if x != nil {
		if x.xxx_hidden_Reason != nil {
			return *x.xxx_hidden_Reason
		}
		return ""
	}
	return ""
}

func (x *ClusterCondition) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *ClusterCondition) SetType(v ClusterConditionType) {
	x.xxx_hidden_Type = v
}

func (x *ClusterCondition) SetStatus(v v1.ConditionStatus) {
	x.xxx_hidden_Status = v
}

func (x *ClusterCondition) SetLastTransitionTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastTransitionTime = v
}

func (x *ClusterCondition) SetReason(v string) {
	x.xxx_hidden_Reason = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ClusterCondition) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *ClusterCondition) HasLastTransitionTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastTransitionTime != nil
}

func (x *ClusterCondition) HasReason() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ClusterCondition) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ClusterCondition) ClearLastTransitionTime() {
	x.xxx_hidden_LastTransitionTime = nil
}

func (x *ClusterCondition) ClearReason() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Reason = nil
}

func (x *ClusterCondition) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Message = nil
}

type ClusterCondition_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type               ClusterConditionType
	Status             v1.ConditionStatus
	LastTransitionTime *timestamppb.Timestamp
	Reason             *string
	Message            *string
}

func (b0 ClusterCondition_builder) Build() *ClusterCondition {
	m0 := &ClusterCondition{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Type = b.Type
	x.xxx_hidden_Status = b.Status
	x.xxx_hidden_LastTransitionTime = b.LastTransitionTime
	if b.Reason != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Reason = b.Reason
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Message = b.Message
	}
	return m0
}

type ClusterNodeSet struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_HostClass string                 `protobuf:"bytes,1,opt,name=host_class,json=hostClass,proto3"`
	xxx_hidden_Size      int32                  `protobuf:"varint,2,opt,name=size,proto3"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ClusterNodeSet) Reset() {
	*x = ClusterNodeSet{}
	mi := &file_private_v1_cluster_type_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterNodeSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterNodeSet) ProtoMessage() {}

func (x *ClusterNodeSet) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_cluster_type_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClusterNodeSet) GetHostClass() string {
	if x != nil {
		return x.xxx_hidden_HostClass
	}
	return ""
}

func (x *ClusterNodeSet) GetSize() int32 {
	if x != nil {
		return x.xxx_hidden_Size
	}
	return 0
}

func (x *ClusterNodeSet) SetHostClass(v string) {
	x.xxx_hidden_HostClass = v
}

func (x *ClusterNodeSet) SetSize(v int32) {
	x.xxx_hidden_Size = v
}

type ClusterNodeSet_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	HostClass string
	Size      int32
}

func (b0 ClusterNodeSet_builder) Build() *ClusterNodeSet {
	m0 := &ClusterNodeSet{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_HostClass = b.HostClass
	x.xxx_hidden_Size = b.Size
	return m0
}

var File_private_v1_cluster_type_proto protoreflect.FileDescriptor

var file_private_v1_cluster_type_proto_rawDesc = string([]byte{
	0x0a, 0x1d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xdd, 0x01, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x30, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x2b, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x31,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x15, 0x0a, 0x06, 0x68, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x68, 0x75, 0x62, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xaa, 0x01, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x42, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6e,
	0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x73, 0x1a, 0x57, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x65, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xd6, 0x02, 0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x73, 0x6f, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x44, 0x0a, 0x09, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x73,
	0x1a, 0x57, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9d, 0x02, 0x0a, 0x10, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4c, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x43, 0x0a, 0x0e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x68, 0x6f, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x2a, 0x7f,
	0x0a, 0x0c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x19, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a,
	0x19, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50,
	0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13,
	0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45,
	0x41, 0x44, 0x59, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x2a,
	0xd0, 0x01, 0x0a, 0x14, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x22, 0x43, 0x4c, 0x55, 0x53,
	0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x26, 0x0a, 0x22, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x44,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52,
	0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4c, 0x55, 0x53,
	0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4c,
	0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x23, 0x0a,
	0x1f, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x47, 0x52, 0x41, 0x44, 0x45, 0x44,
	0x10, 0x04, 0x42, 0xb7, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x6e, 0x61, 0x62, 0x6f, 0x78, 0x2f, 0x66, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x50, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x5f, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x17, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x0b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var file_private_v1_cluster_type_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_private_v1_cluster_type_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_private_v1_cluster_type_proto_goTypes = []any{
	(ClusterState)(0),             // 0: private.v1.ClusterState
	(ClusterConditionType)(0),     // 1: private.v1.ClusterConditionType
	(*Cluster)(nil),               // 2: private.v1.Cluster
	(*ClusterSpec)(nil),           // 3: private.v1.ClusterSpec
	(*ClusterStatus)(nil),         // 4: private.v1.ClusterStatus
	(*ClusterCondition)(nil),      // 5: private.v1.ClusterCondition
	(*ClusterNodeSet)(nil),        // 6: private.v1.ClusterNodeSet
	nil,                           // 7: private.v1.ClusterSpec.NodeSetsEntry
	nil,                           // 8: private.v1.ClusterStatus.NodeSetsEntry
	(*Metadata)(nil),              // 9: private.v1.Metadata
	(v1.ConditionStatus)(0),       // 10: shared.v1.ConditionStatus
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_private_v1_cluster_type_proto_depIdxs = []int32{
	9,  // 0: private.v1.Cluster.metadata:type_name -> private.v1.Metadata
	3,  // 1: private.v1.Cluster.spec:type_name -> private.v1.ClusterSpec
	4,  // 2: private.v1.Cluster.status:type_name -> private.v1.ClusterStatus
	7,  // 3: private.v1.ClusterSpec.node_sets:type_name -> private.v1.ClusterSpec.NodeSetsEntry
	0,  // 4: private.v1.ClusterStatus.state:type_name -> private.v1.ClusterState
	5,  // 5: private.v1.ClusterStatus.conditions:type_name -> private.v1.ClusterCondition
	8,  // 6: private.v1.ClusterStatus.node_sets:type_name -> private.v1.ClusterStatus.NodeSetsEntry
	1,  // 7: private.v1.ClusterCondition.type:type_name -> private.v1.ClusterConditionType
	10, // 8: private.v1.ClusterCondition.status:type_name -> shared.v1.ConditionStatus
	11, // 9: private.v1.ClusterCondition.last_transition_time:type_name -> google.protobuf.Timestamp
	6,  // 10: private.v1.ClusterSpec.NodeSetsEntry.value:type_name -> private.v1.ClusterNodeSet
	6,  // 11: private.v1.ClusterStatus.NodeSetsEntry.value:type_name -> private.v1.ClusterNodeSet
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_private_v1_cluster_type_proto_init() }
func file_private_v1_cluster_type_proto_init() {
	if File_private_v1_cluster_type_proto != nil {
		return
	}
	file_private_v1_metadata_type_proto_init()
	file_private_v1_cluster_type_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_private_v1_cluster_type_proto_rawDesc), len(file_private_v1_cluster_type_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_private_v1_cluster_type_proto_goTypes,
		DependencyIndexes: file_private_v1_cluster_type_proto_depIdxs,
		EnumInfos:         file_private_v1_cluster_type_proto_enumTypes,
		MessageInfos:      file_private_v1_cluster_type_proto_msgTypes,
	}.Build()
	File_private_v1_cluster_type_proto = out.File
	file_private_v1_cluster_type_proto_goTypes = nil
	file_private_v1_cluster_type_proto_depIdxs = nil
}
