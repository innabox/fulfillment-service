//
// Copyright (c) 2025 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: private/v1/host_type.proto

//go:build !protoopaque

package privatev1

import (
	v1 "github.com/innabox/fulfillment-service/internal/api/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HostState int32

const (
	HostState_HOST_STATE_UNSPECIFIED HostState = 0
	HostState_HOST_STATE_PROGRESSING HostState = 1
	HostState_HOST_STATE_READY       HostState = 2
	HostState_HOST_STATE_FAILED      HostState = 3
)

// Enum value maps for HostState.
var (
	HostState_name = map[int32]string{
		0: "HOST_STATE_UNSPECIFIED",
		1: "HOST_STATE_PROGRESSING",
		2: "HOST_STATE_READY",
		3: "HOST_STATE_FAILED",
	}
	HostState_value = map[string]int32{
		"HOST_STATE_UNSPECIFIED": 0,
		"HOST_STATE_PROGRESSING": 1,
		"HOST_STATE_READY":       2,
		"HOST_STATE_FAILED":      3,
	}
)

func (x HostState) Enum() *HostState {
	p := new(HostState)
	*p = x
	return p
}

func (x HostState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostState) Descriptor() protoreflect.EnumDescriptor {
	return file_private_v1_host_type_proto_enumTypes[0].Descriptor()
}

func (HostState) Type() protoreflect.EnumType {
	return &file_private_v1_host_type_proto_enumTypes[0]
}

func (x HostState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type HostConditionType int32

const (
	HostConditionType_HOST_CONDITION_TYPE_UNSPECIFIED HostConditionType = 0
	HostConditionType_HOST_CONDITION_TYPE_PROGRESSING HostConditionType = 1
	HostConditionType_HOST_CONDITION_TYPE_READY       HostConditionType = 2
	HostConditionType_HOST_CONDITION_TYPE_FAILED      HostConditionType = 3
	HostConditionType_HOST_CONDITION_TYPE_DEGRADED    HostConditionType = 4
)

// Enum value maps for HostConditionType.
var (
	HostConditionType_name = map[int32]string{
		0: "HOST_CONDITION_TYPE_UNSPECIFIED",
		1: "HOST_CONDITION_TYPE_PROGRESSING",
		2: "HOST_CONDITION_TYPE_READY",
		3: "HOST_CONDITION_TYPE_FAILED",
		4: "HOST_CONDITION_TYPE_DEGRADED",
	}
	HostConditionType_value = map[string]int32{
		"HOST_CONDITION_TYPE_UNSPECIFIED": 0,
		"HOST_CONDITION_TYPE_PROGRESSING": 1,
		"HOST_CONDITION_TYPE_READY":       2,
		"HOST_CONDITION_TYPE_FAILED":      3,
		"HOST_CONDITION_TYPE_DEGRADED":    4,
	}
)

func (x HostConditionType) Enum() *HostConditionType {
	p := new(HostConditionType)
	*p = x
	return p
}

func (x HostConditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostConditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_private_v1_host_type_proto_enumTypes[1].Descriptor()
}

func (HostConditionType) Type() protoreflect.EnumType {
	return &file_private_v1_host_type_proto_enumTypes[1]
}

func (x HostConditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type HostPowerState int32

const (
	HostPowerState_HOST_POWER_STATE_UNSPECIFIED HostPowerState = 0
	HostPowerState_HOST_POWER_STATE_ON          HostPowerState = 1
	HostPowerState_HOST_POWER_STATE_OFF         HostPowerState = 2
)

// Enum value maps for HostPowerState.
var (
	HostPowerState_name = map[int32]string{
		0: "HOST_POWER_STATE_UNSPECIFIED",
		1: "HOST_POWER_STATE_ON",
		2: "HOST_POWER_STATE_OFF",
	}
	HostPowerState_value = map[string]int32{
		"HOST_POWER_STATE_UNSPECIFIED": 0,
		"HOST_POWER_STATE_ON":          1,
		"HOST_POWER_STATE_OFF":         2,
	}
)

func (x HostPowerState) Enum() *HostPowerState {
	p := new(HostPowerState)
	*p = x
	return p
}

func (x HostPowerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HostPowerState) Descriptor() protoreflect.EnumDescriptor {
	return file_private_v1_host_type_proto_enumTypes[2].Descriptor()
}

func (HostPowerState) Type() protoreflect.EnumType {
	return &file_private_v1_host_type_proto_enumTypes[2]
}

func (x HostPowerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Contains the details about the host that are available only for the system.
type Host struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Public data.
	Id            string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata      *Metadata   `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *HostSpec   `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *HostStatus `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Host) Reset() {
	*x = Host{}
	mi := &file_private_v1_host_type_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_host_type_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Host) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Host) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Host) GetSpec() *HostSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Host) GetStatus() *HostStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Host) SetId(v string) {
	x.Id = v
}

func (x *Host) SetMetadata(v *Metadata) {
	x.Metadata = v
}

func (x *Host) SetSpec(v *HostSpec) {
	x.Spec = v
}

func (x *Host) SetStatus(v *HostStatus) {
	x.Status = v
}

func (x *Host) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.Metadata != nil
}

func (x *Host) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.Spec != nil
}

func (x *Host) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.Status != nil
}

func (x *Host) ClearMetadata() {
	x.Metadata = nil
}

func (x *Host) ClearSpec() {
	x.Spec = nil
}

func (x *Host) ClearStatus() {
	x.Status = nil
}

type Host_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Public data.
	Id       string
	Metadata *Metadata
	Spec     *HostSpec
	Status   *HostStatus
}

func (b0 Host_builder) Build() *Host {
	m0 := &Host{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	x.Metadata = b.Metadata
	x.Spec = b.Spec
	x.Status = b.Status
	return m0
}

type HostSpec struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Copies of the public fields.
	PowerState    HostPowerState `protobuf:"varint,1,opt,name=power_state,json=powerState,proto3,enum=private.v1.HostPowerState" json:"power_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostSpec) Reset() {
	*x = HostSpec{}
	mi := &file_private_v1_host_type_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSpec) ProtoMessage() {}

func (x *HostSpec) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_host_type_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HostSpec) GetPowerState() HostPowerState {
	if x != nil {
		return x.PowerState
	}
	return HostPowerState_HOST_POWER_STATE_UNSPECIFIED
}

func (x *HostSpec) SetPowerState(v HostPowerState) {
	x.PowerState = v
}

type HostSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Copies of the public fields.
	PowerState HostPowerState
}

func (b0 HostSpec_builder) Build() *HostSpec {
	m0 := &HostSpec{}
	b, x := &b0, m0
	_, _ = b, x
	x.PowerState = b.PowerState
	return m0
}

type HostStatus struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Copies of the public fields.
	State      HostState        `protobuf:"varint,1,opt,name=state,proto3,enum=private.v1.HostState" json:"state,omitempty"`
	PowerState HostPowerState   `protobuf:"varint,2,opt,name=power_state,json=powerState,proto3,enum=private.v1.HostPowerState" json:"power_state,omitempty"`
	Conditions []*HostCondition `protobuf:"bytes,3,rep,name=conditions,proto3" json:"conditions,omitempty"`
	// Identifier of the host pool that was selected for this host.
	HostPool      string `protobuf:"bytes,4,opt,name=host_pool,json=hostPool,proto3" json:"host_pool,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostStatus) Reset() {
	*x = HostStatus{}
	mi := &file_private_v1_host_type_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostStatus) ProtoMessage() {}

func (x *HostStatus) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_host_type_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HostStatus) GetState() HostState {
	if x != nil {
		return x.State
	}
	return HostState_HOST_STATE_UNSPECIFIED
}

func (x *HostStatus) GetPowerState() HostPowerState {
	if x != nil {
		return x.PowerState
	}
	return HostPowerState_HOST_POWER_STATE_UNSPECIFIED
}

func (x *HostStatus) GetConditions() []*HostCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *HostStatus) GetHostPool() string {
	if x != nil {
		return x.HostPool
	}
	return ""
}

func (x *HostStatus) SetState(v HostState) {
	x.State = v
}

func (x *HostStatus) SetPowerState(v HostPowerState) {
	x.PowerState = v
}

func (x *HostStatus) SetConditions(v []*HostCondition) {
	x.Conditions = v
}

func (x *HostStatus) SetHostPool(v string) {
	x.HostPool = v
}

type HostStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Copies of the public fields.
	State      HostState
	PowerState HostPowerState
	Conditions []*HostCondition
	// Identifier of the host pool that was selected for this host.
	HostPool string
}

func (b0 HostStatus_builder) Build() *HostStatus {
	m0 := &HostStatus{}
	b, x := &b0, m0
	_, _ = b, x
	x.State = b.State
	x.PowerState = b.PowerState
	x.Conditions = b.Conditions
	x.HostPool = b.HostPool
	return m0
}

type HostCondition struct {
	state              protoimpl.MessageState `protogen:"hybrid.v1"`
	Type               HostConditionType      `protobuf:"varint,1,opt,name=type,proto3,enum=private.v1.HostConditionType" json:"type,omitempty"`
	Status             v1.ConditionStatus     `protobuf:"varint,2,opt,name=status,proto3,enum=shared.v1.ConditionStatus" json:"status,omitempty"`
	LastTransitionTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_transition_time,json=lastTransitionTime,proto3" json:"last_transition_time,omitempty"`
	Reason             *string                `protobuf:"bytes,4,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	Message            *string                `protobuf:"bytes,5,opt,name=message,proto3,oneof" json:"message,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HostCondition) Reset() {
	*x = HostCondition{}
	mi := &file_private_v1_host_type_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostCondition) ProtoMessage() {}

func (x *HostCondition) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_host_type_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HostCondition) GetType() HostConditionType {
	if x != nil {
		return x.Type
	}
	return HostConditionType_HOST_CONDITION_TYPE_UNSPECIFIED
}

func (x *HostCondition) GetStatus() v1.ConditionStatus {
	if x != nil {
		return x.Status
	}
	return v1.ConditionStatus(0)
}

func (x *HostCondition) GetLastTransitionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastTransitionTime
	}
	return nil
}

func (x *HostCondition) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *HostCondition) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *HostCondition) SetType(v HostConditionType) {
	x.Type = v
}

func (x *HostCondition) SetStatus(v v1.ConditionStatus) {
	x.Status = v
}

func (x *HostCondition) SetLastTransitionTime(v *timestamppb.Timestamp) {
	x.LastTransitionTime = v
}

func (x *HostCondition) SetReason(v string) {
	x.Reason = &v
}

func (x *HostCondition) SetMessage(v string) {
	x.Message = &v
}

func (x *HostCondition) HasLastTransitionTime() bool {
	if x == nil {
		return false
	}
	return x.LastTransitionTime != nil
}

func (x *HostCondition) HasReason() bool {
	if x == nil {
		return false
	}
	return x.Reason != nil
}

func (x *HostCondition) HasMessage() bool {
	if x == nil {
		return false
	}
	return x.Message != nil
}

func (x *HostCondition) ClearLastTransitionTime() {
	x.LastTransitionTime = nil
}

func (x *HostCondition) ClearReason() {
	x.Reason = nil
}

func (x *HostCondition) ClearMessage() {
	x.Message = nil
}

type HostCondition_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type               HostConditionType
	Status             v1.ConditionStatus
	LastTransitionTime *timestamppb.Timestamp
	Reason             *string
	Message            *string
}

func (b0 HostCondition_builder) Build() *HostCondition {
	m0 := &HostCondition{}
	b, x := &b0, m0
	_, _ = b, x
	x.Type = b.Type
	x.Status = b.Status
	x.LastTransitionTime = b.LastTransitionTime
	x.Reason = b.Reason
	x.Message = b.Message
	return m0
}

var File_private_v1_host_type_proto protoreflect.FileDescriptor

var file_private_v1_host_type_proto_rawDesc = string([]byte{
	0x0a, 0x1a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa2, 0x01, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x47, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xce,
	0x01, 0x0a, 0x0a, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73,
	0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x22,
	0x97, 0x02, 0x0a, 0x0d, 0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4c, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x70, 0x0a, 0x09, 0x48, 0x6f, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x41,
	0x44, 0x59, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x2a, 0xbe, 0x01, 0x0a, 0x11,
	0x48, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x23, 0x0a, 0x1f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x43,
	0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52,
	0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x48,
	0x4f, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x48, 0x4f,
	0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x48, 0x4f,
	0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x44, 0x45, 0x47, 0x52, 0x41, 0x44, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x65, 0x0a, 0x0e,
	0x48, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x1c, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x17, 0x0a, 0x13, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x48, 0x4f, 0x53,
	0x54, 0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x46,
	0x46, 0x10, 0x02, 0x42, 0xb4, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x6e, 0x61, 0x62, 0x6f, 0x78, 0x2f, 0x66, 0x75, 0x6c, 0x66,
	0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x50, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x17, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0b, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var file_private_v1_host_type_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_private_v1_host_type_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_private_v1_host_type_proto_goTypes = []any{
	(HostState)(0),                // 0: private.v1.HostState
	(HostConditionType)(0),        // 1: private.v1.HostConditionType
	(HostPowerState)(0),           // 2: private.v1.HostPowerState
	(*Host)(nil),                  // 3: private.v1.Host
	(*HostSpec)(nil),              // 4: private.v1.HostSpec
	(*HostStatus)(nil),            // 5: private.v1.HostStatus
	(*HostCondition)(nil),         // 6: private.v1.HostCondition
	(*Metadata)(nil),              // 7: private.v1.Metadata
	(v1.ConditionStatus)(0),       // 8: shared.v1.ConditionStatus
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_private_v1_host_type_proto_depIdxs = []int32{
	7,  // 0: private.v1.Host.metadata:type_name -> private.v1.Metadata
	4,  // 1: private.v1.Host.spec:type_name -> private.v1.HostSpec
	5,  // 2: private.v1.Host.status:type_name -> private.v1.HostStatus
	2,  // 3: private.v1.HostSpec.power_state:type_name -> private.v1.HostPowerState
	0,  // 4: private.v1.HostStatus.state:type_name -> private.v1.HostState
	2,  // 5: private.v1.HostStatus.power_state:type_name -> private.v1.HostPowerState
	6,  // 6: private.v1.HostStatus.conditions:type_name -> private.v1.HostCondition
	1,  // 7: private.v1.HostCondition.type:type_name -> private.v1.HostConditionType
	8,  // 8: private.v1.HostCondition.status:type_name -> shared.v1.ConditionStatus
	9,  // 9: private.v1.HostCondition.last_transition_time:type_name -> google.protobuf.Timestamp
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_private_v1_host_type_proto_init() }
func file_private_v1_host_type_proto_init() {
	if File_private_v1_host_type_proto != nil {
		return
	}
	file_private_v1_metadata_type_proto_init()
	file_private_v1_host_type_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_private_v1_host_type_proto_rawDesc), len(file_private_v1_host_type_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_private_v1_host_type_proto_goTypes,
		DependencyIndexes: file_private_v1_host_type_proto_depIdxs,
		EnumInfos:         file_private_v1_host_type_proto_enumTypes,
		MessageInfos:      file_private_v1_host_type_proto_msgTypes,
	}.Build()
	File_private_v1_host_type_proto = out.File
	file_private_v1_host_type_proto_goTypes = nil
	file_private_v1_host_type_proto_depIdxs = nil
}
