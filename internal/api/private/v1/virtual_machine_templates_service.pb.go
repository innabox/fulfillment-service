//
// Copyright (c) 2025 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: private/v1/virtual_machine_templates_service.proto

//go:build !protoopaque

package privatev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VirtualMachineTemplatesListRequest struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Offset        *int32                 `protobuf:"varint,1,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	Limit         *int32                 `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Filter        *string                `protobuf:"bytes,3,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachineTemplatesListRequest) Reset() {
	*x = VirtualMachineTemplatesListRequest{}
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineTemplatesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineTemplatesListRequest) ProtoMessage() {}

func (x *VirtualMachineTemplatesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineTemplatesListRequest) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *VirtualMachineTemplatesListRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *VirtualMachineTemplatesListRequest) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *VirtualMachineTemplatesListRequest) SetOffset(v int32) {
	x.Offset = &v
}

func (x *VirtualMachineTemplatesListRequest) SetLimit(v int32) {
	x.Limit = &v
}

func (x *VirtualMachineTemplatesListRequest) SetFilter(v string) {
	x.Filter = &v
}

func (x *VirtualMachineTemplatesListRequest) HasOffset() bool {
	if x == nil {
		return false
	}
	return x.Offset != nil
}

func (x *VirtualMachineTemplatesListRequest) HasLimit() bool {
	if x == nil {
		return false
	}
	return x.Limit != nil
}

func (x *VirtualMachineTemplatesListRequest) HasFilter() bool {
	if x == nil {
		return false
	}
	return x.Filter != nil
}

func (x *VirtualMachineTemplatesListRequest) ClearOffset() {
	x.Offset = nil
}

func (x *VirtualMachineTemplatesListRequest) ClearLimit() {
	x.Limit = nil
}

func (x *VirtualMachineTemplatesListRequest) ClearFilter() {
	x.Filter = nil
}

type VirtualMachineTemplatesListRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Offset *int32
	Limit  *int32
	Filter *string
}

func (b0 VirtualMachineTemplatesListRequest_builder) Build() *VirtualMachineTemplatesListRequest {
	m0 := &VirtualMachineTemplatesListRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Offset = b.Offset
	x.Limit = b.Limit
	x.Filter = b.Filter
	return m0
}

type VirtualMachineTemplatesListResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Size          *int32                    `protobuf:"varint,1,opt,name=size,proto3,oneof" json:"size,omitempty"`
	Total         *int32                    `protobuf:"varint,2,opt,name=total,proto3,oneof" json:"total,omitempty"`
	Items         []*VirtualMachineTemplate `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachineTemplatesListResponse) Reset() {
	*x = VirtualMachineTemplatesListResponse{}
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineTemplatesListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineTemplatesListResponse) ProtoMessage() {}

func (x *VirtualMachineTemplatesListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineTemplatesListResponse) GetSize() int32 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *VirtualMachineTemplatesListResponse) GetTotal() int32 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

func (x *VirtualMachineTemplatesListResponse) GetItems() []*VirtualMachineTemplate {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *VirtualMachineTemplatesListResponse) SetSize(v int32) {
	x.Size = &v
}

func (x *VirtualMachineTemplatesListResponse) SetTotal(v int32) {
	x.Total = &v
}

func (x *VirtualMachineTemplatesListResponse) SetItems(v []*VirtualMachineTemplate) {
	x.Items = v
}

func (x *VirtualMachineTemplatesListResponse) HasSize() bool {
	if x == nil {
		return false
	}
	return x.Size != nil
}

func (x *VirtualMachineTemplatesListResponse) HasTotal() bool {
	if x == nil {
		return false
	}
	return x.Total != nil
}

func (x *VirtualMachineTemplatesListResponse) ClearSize() {
	x.Size = nil
}

func (x *VirtualMachineTemplatesListResponse) ClearTotal() {
	x.Total = nil
}

type VirtualMachineTemplatesListResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Size  *int32
	Total *int32
	Items []*VirtualMachineTemplate
}

func (b0 VirtualMachineTemplatesListResponse_builder) Build() *VirtualMachineTemplatesListResponse {
	m0 := &VirtualMachineTemplatesListResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Size = b.Size
	x.Total = b.Total
	x.Items = b.Items
	return m0
}

type VirtualMachineTemplatesGetRequest struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachineTemplatesGetRequest) Reset() {
	*x = VirtualMachineTemplatesGetRequest{}
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineTemplatesGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineTemplatesGetRequest) ProtoMessage() {}

func (x *VirtualMachineTemplatesGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineTemplatesGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VirtualMachineTemplatesGetRequest) SetId(v string) {
	x.Id = v
}

type VirtualMachineTemplatesGetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id string
}

func (b0 VirtualMachineTemplatesGetRequest_builder) Build() *VirtualMachineTemplatesGetRequest {
	m0 := &VirtualMachineTemplatesGetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	return m0
}

type VirtualMachineTemplatesGetResponse struct {
	state         protoimpl.MessageState  `protogen:"hybrid.v1"`
	Object        *VirtualMachineTemplate `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachineTemplatesGetResponse) Reset() {
	*x = VirtualMachineTemplatesGetResponse{}
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineTemplatesGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineTemplatesGetResponse) ProtoMessage() {}

func (x *VirtualMachineTemplatesGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineTemplatesGetResponse) GetObject() *VirtualMachineTemplate {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *VirtualMachineTemplatesGetResponse) SetObject(v *VirtualMachineTemplate) {
	x.Object = v
}

func (x *VirtualMachineTemplatesGetResponse) HasObject() bool {
	if x == nil {
		return false
	}
	return x.Object != nil
}

func (x *VirtualMachineTemplatesGetResponse) ClearObject() {
	x.Object = nil
}

type VirtualMachineTemplatesGetResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Object *VirtualMachineTemplate
}

func (b0 VirtualMachineTemplatesGetResponse_builder) Build() *VirtualMachineTemplatesGetResponse {
	m0 := &VirtualMachineTemplatesGetResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Object = b.Object
	return m0
}

type VirtualMachineTemplatesCreateRequest struct {
	state         protoimpl.MessageState  `protogen:"hybrid.v1"`
	Object        *VirtualMachineTemplate `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachineTemplatesCreateRequest) Reset() {
	*x = VirtualMachineTemplatesCreateRequest{}
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineTemplatesCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineTemplatesCreateRequest) ProtoMessage() {}

func (x *VirtualMachineTemplatesCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineTemplatesCreateRequest) GetObject() *VirtualMachineTemplate {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *VirtualMachineTemplatesCreateRequest) SetObject(v *VirtualMachineTemplate) {
	x.Object = v
}

func (x *VirtualMachineTemplatesCreateRequest) HasObject() bool {
	if x == nil {
		return false
	}
	return x.Object != nil
}

func (x *VirtualMachineTemplatesCreateRequest) ClearObject() {
	x.Object = nil
}

type VirtualMachineTemplatesCreateRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Object *VirtualMachineTemplate
}

func (b0 VirtualMachineTemplatesCreateRequest_builder) Build() *VirtualMachineTemplatesCreateRequest {
	m0 := &VirtualMachineTemplatesCreateRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Object = b.Object
	return m0
}

type VirtualMachineTemplatesCreateResponse struct {
	state         protoimpl.MessageState  `protogen:"hybrid.v1"`
	Object        *VirtualMachineTemplate `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachineTemplatesCreateResponse) Reset() {
	*x = VirtualMachineTemplatesCreateResponse{}
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineTemplatesCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineTemplatesCreateResponse) ProtoMessage() {}

func (x *VirtualMachineTemplatesCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineTemplatesCreateResponse) GetObject() *VirtualMachineTemplate {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *VirtualMachineTemplatesCreateResponse) SetObject(v *VirtualMachineTemplate) {
	x.Object = v
}

func (x *VirtualMachineTemplatesCreateResponse) HasObject() bool {
	if x == nil {
		return false
	}
	return x.Object != nil
}

func (x *VirtualMachineTemplatesCreateResponse) ClearObject() {
	x.Object = nil
}

type VirtualMachineTemplatesCreateResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Object *VirtualMachineTemplate
}

func (b0 VirtualMachineTemplatesCreateResponse_builder) Build() *VirtualMachineTemplatesCreateResponse {
	m0 := &VirtualMachineTemplatesCreateResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Object = b.Object
	return m0
}

type VirtualMachineTemplatesDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachineTemplatesDeleteRequest) Reset() {
	*x = VirtualMachineTemplatesDeleteRequest{}
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineTemplatesDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineTemplatesDeleteRequest) ProtoMessage() {}

func (x *VirtualMachineTemplatesDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineTemplatesDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VirtualMachineTemplatesDeleteRequest) SetId(v string) {
	x.Id = v
}

type VirtualMachineTemplatesDeleteRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id string
}

func (b0 VirtualMachineTemplatesDeleteRequest_builder) Build() *VirtualMachineTemplatesDeleteRequest {
	m0 := &VirtualMachineTemplatesDeleteRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	return m0
}

type VirtualMachineTemplatesDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachineTemplatesDeleteResponse) Reset() {
	*x = VirtualMachineTemplatesDeleteResponse{}
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineTemplatesDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineTemplatesDeleteResponse) ProtoMessage() {}

func (x *VirtualMachineTemplatesDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type VirtualMachineTemplatesDeleteResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 VirtualMachineTemplatesDeleteResponse_builder) Build() *VirtualMachineTemplatesDeleteResponse {
	m0 := &VirtualMachineTemplatesDeleteResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type VirtualMachineTemplatesUpdateRequest struct {
	state         protoimpl.MessageState  `protogen:"hybrid.v1"`
	Object        *VirtualMachineTemplate `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask  `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachineTemplatesUpdateRequest) Reset() {
	*x = VirtualMachineTemplatesUpdateRequest{}
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineTemplatesUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineTemplatesUpdateRequest) ProtoMessage() {}

func (x *VirtualMachineTemplatesUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineTemplatesUpdateRequest) GetObject() *VirtualMachineTemplate {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *VirtualMachineTemplatesUpdateRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

func (x *VirtualMachineTemplatesUpdateRequest) SetObject(v *VirtualMachineTemplate) {
	x.Object = v
}

func (x *VirtualMachineTemplatesUpdateRequest) SetUpdateMask(v *fieldmaskpb.FieldMask) {
	x.UpdateMask = v
}

func (x *VirtualMachineTemplatesUpdateRequest) HasObject() bool {
	if x == nil {
		return false
	}
	return x.Object != nil
}

func (x *VirtualMachineTemplatesUpdateRequest) HasUpdateMask() bool {
	if x == nil {
		return false
	}
	return x.UpdateMask != nil
}

func (x *VirtualMachineTemplatesUpdateRequest) ClearObject() {
	x.Object = nil
}

func (x *VirtualMachineTemplatesUpdateRequest) ClearUpdateMask() {
	x.UpdateMask = nil
}

type VirtualMachineTemplatesUpdateRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Object     *VirtualMachineTemplate
	UpdateMask *fieldmaskpb.FieldMask
}

func (b0 VirtualMachineTemplatesUpdateRequest_builder) Build() *VirtualMachineTemplatesUpdateRequest {
	m0 := &VirtualMachineTemplatesUpdateRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Object = b.Object
	x.UpdateMask = b.UpdateMask
	return m0
}

type VirtualMachineTemplatesUpdateResponse struct {
	state         protoimpl.MessageState  `protogen:"hybrid.v1"`
	Object        *VirtualMachineTemplate `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachineTemplatesUpdateResponse) Reset() {
	*x = VirtualMachineTemplatesUpdateResponse{}
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineTemplatesUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineTemplatesUpdateResponse) ProtoMessage() {}

func (x *VirtualMachineTemplatesUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_virtual_machine_templates_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineTemplatesUpdateResponse) GetObject() *VirtualMachineTemplate {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *VirtualMachineTemplatesUpdateResponse) SetObject(v *VirtualMachineTemplate) {
	x.Object = v
}

func (x *VirtualMachineTemplatesUpdateResponse) HasObject() bool {
	if x == nil {
		return false
	}
	return x.Object != nil
}

func (x *VirtualMachineTemplatesUpdateResponse) ClearObject() {
	x.Object = nil
}

type VirtualMachineTemplatesUpdateResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Object *VirtualMachineTemplate
}

func (b0 VirtualMachineTemplatesUpdateResponse_builder) Build() *VirtualMachineTemplatesUpdateResponse {
	m0 := &VirtualMachineTemplatesUpdateResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Object = b.Object
	return m0
}

var File_private_v1_virtual_machine_templates_service_proto protoreflect.FileDescriptor

var file_private_v1_virtual_machine_templates_service_proto_rawDesc = string([]byte{
	0x0a, 0x32, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x99, 0x01, 0x0a, 0x22, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xa6,
	0x01, 0x0a, 0x23, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x33, 0x0a, 0x21, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x60, 0x0a, 0x22,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x62,
	0x0a, 0x24, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0x63, 0x0a, 0x25, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x36, 0x0a, 0x24, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x27, 0x0a, 0x25, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x24, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3b, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x63, 0x0a, 0x25, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x32,
	0xbf, 0x04, 0x0a, 0x17, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x69, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2e, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x2d, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6f, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6f, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0xca, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x2e, 0x76, 0x31, 0x42, 0x23, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x48, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x6e, 0x61, 0x62, 0x6f, 0x78, 0x2f,
	0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x50, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0b, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x5f, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x17, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x5f, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x0b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var file_private_v1_virtual_machine_templates_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_private_v1_virtual_machine_templates_service_proto_goTypes = []any{
	(*VirtualMachineTemplatesListRequest)(nil),    // 0: private.v1.VirtualMachineTemplatesListRequest
	(*VirtualMachineTemplatesListResponse)(nil),   // 1: private.v1.VirtualMachineTemplatesListResponse
	(*VirtualMachineTemplatesGetRequest)(nil),     // 2: private.v1.VirtualMachineTemplatesGetRequest
	(*VirtualMachineTemplatesGetResponse)(nil),    // 3: private.v1.VirtualMachineTemplatesGetResponse
	(*VirtualMachineTemplatesCreateRequest)(nil),  // 4: private.v1.VirtualMachineTemplatesCreateRequest
	(*VirtualMachineTemplatesCreateResponse)(nil), // 5: private.v1.VirtualMachineTemplatesCreateResponse
	(*VirtualMachineTemplatesDeleteRequest)(nil),  // 6: private.v1.VirtualMachineTemplatesDeleteRequest
	(*VirtualMachineTemplatesDeleteResponse)(nil), // 7: private.v1.VirtualMachineTemplatesDeleteResponse
	(*VirtualMachineTemplatesUpdateRequest)(nil),  // 8: private.v1.VirtualMachineTemplatesUpdateRequest
	(*VirtualMachineTemplatesUpdateResponse)(nil), // 9: private.v1.VirtualMachineTemplatesUpdateResponse
	(*VirtualMachineTemplate)(nil),                // 10: private.v1.VirtualMachineTemplate
	(*fieldmaskpb.FieldMask)(nil),                 // 11: google.protobuf.FieldMask
}
var file_private_v1_virtual_machine_templates_service_proto_depIdxs = []int32{
	10, // 0: private.v1.VirtualMachineTemplatesListResponse.items:type_name -> private.v1.VirtualMachineTemplate
	10, // 1: private.v1.VirtualMachineTemplatesGetResponse.object:type_name -> private.v1.VirtualMachineTemplate
	10, // 2: private.v1.VirtualMachineTemplatesCreateRequest.object:type_name -> private.v1.VirtualMachineTemplate
	10, // 3: private.v1.VirtualMachineTemplatesCreateResponse.object:type_name -> private.v1.VirtualMachineTemplate
	10, // 4: private.v1.VirtualMachineTemplatesUpdateRequest.object:type_name -> private.v1.VirtualMachineTemplate
	11, // 5: private.v1.VirtualMachineTemplatesUpdateRequest.update_mask:type_name -> google.protobuf.FieldMask
	10, // 6: private.v1.VirtualMachineTemplatesUpdateResponse.object:type_name -> private.v1.VirtualMachineTemplate
	0,  // 7: private.v1.VirtualMachineTemplates.List:input_type -> private.v1.VirtualMachineTemplatesListRequest
	2,  // 8: private.v1.VirtualMachineTemplates.Get:input_type -> private.v1.VirtualMachineTemplatesGetRequest
	4,  // 9: private.v1.VirtualMachineTemplates.Create:input_type -> private.v1.VirtualMachineTemplatesCreateRequest
	6,  // 10: private.v1.VirtualMachineTemplates.Delete:input_type -> private.v1.VirtualMachineTemplatesDeleteRequest
	8,  // 11: private.v1.VirtualMachineTemplates.Update:input_type -> private.v1.VirtualMachineTemplatesUpdateRequest
	1,  // 12: private.v1.VirtualMachineTemplates.List:output_type -> private.v1.VirtualMachineTemplatesListResponse
	3,  // 13: private.v1.VirtualMachineTemplates.Get:output_type -> private.v1.VirtualMachineTemplatesGetResponse
	5,  // 14: private.v1.VirtualMachineTemplates.Create:output_type -> private.v1.VirtualMachineTemplatesCreateResponse
	7,  // 15: private.v1.VirtualMachineTemplates.Delete:output_type -> private.v1.VirtualMachineTemplatesDeleteResponse
	9,  // 16: private.v1.VirtualMachineTemplates.Update:output_type -> private.v1.VirtualMachineTemplatesUpdateResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_private_v1_virtual_machine_templates_service_proto_init() }
func file_private_v1_virtual_machine_templates_service_proto_init() {
	if File_private_v1_virtual_machine_templates_service_proto != nil {
		return
	}
	file_private_v1_virtual_machine_template_type_proto_init()
	file_private_v1_virtual_machine_templates_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_private_v1_virtual_machine_templates_service_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_private_v1_virtual_machine_templates_service_proto_rawDesc), len(file_private_v1_virtual_machine_templates_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_private_v1_virtual_machine_templates_service_proto_goTypes,
		DependencyIndexes: file_private_v1_virtual_machine_templates_service_proto_depIdxs,
		MessageInfos:      file_private_v1_virtual_machine_templates_service_proto_msgTypes,
	}.Build()
	File_private_v1_virtual_machine_templates_service_proto = out.File
	file_private_v1_virtual_machine_templates_service_proto_goTypes = nil
	file_private_v1_virtual_machine_templates_service_proto_depIdxs = nil
}
