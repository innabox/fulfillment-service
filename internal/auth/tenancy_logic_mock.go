// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/innabox/fulfillment-service/internal/auth (interfaces: TenancyLogic)
//
// Generated by this command:
//
//	mockgen -destination=tenancy_logic_mock.go -package=auth . TenancyLogic
//

// Package auth is a generated GoMock package.
package auth

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockTenancyLogic is a mock of TenancyLogic interface.
type MockTenancyLogic struct {
	ctrl     *gomock.Controller
	recorder *MockTenancyLogicMockRecorder
	isgomock struct{}
}

// MockTenancyLogicMockRecorder is the mock recorder for MockTenancyLogic.
type MockTenancyLogicMockRecorder struct {
	mock *MockTenancyLogic
}

// NewMockTenancyLogic creates a new mock instance.
func NewMockTenancyLogic(ctrl *gomock.Controller) *MockTenancyLogic {
	mock := &MockTenancyLogic{ctrl: ctrl}
	mock.recorder = &MockTenancyLogicMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTenancyLogic) EXPECT() *MockTenancyLogicMockRecorder {
	return m.recorder
}

// DetermineAssignedTenants mocks base method.
func (m *MockTenancyLogic) DetermineAssignedTenants(ctx context.Context) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DetermineAssignedTenants", ctx)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DetermineAssignedTenants indicates an expected call of DetermineAssignedTenants.
func (mr *MockTenancyLogicMockRecorder) DetermineAssignedTenants(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DetermineAssignedTenants", reflect.TypeOf((*MockTenancyLogic)(nil).DetermineAssignedTenants), ctx)
}

// DetermineVisibleTenants mocks base method.
func (m *MockTenancyLogic) DetermineVisibleTenants(ctx context.Context) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DetermineVisibleTenants", ctx)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DetermineVisibleTenants indicates an expected call of DetermineVisibleTenants.
func (mr *MockTenancyLogicMockRecorder) DetermineVisibleTenants(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DetermineVisibleTenants", reflect.TypeOf((*MockTenancyLogic)(nil).DetermineVisibleTenants), ctx)
}
