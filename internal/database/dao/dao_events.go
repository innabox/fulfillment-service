/*
Copyright (c) 2025 Red Hat Inc.

Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the
License. You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific
language governing permissions and limitations under the License.
*/

package dao

import (
	"context"
	"fmt"

	"google.golang.org/protobuf/proto"
)

// EventType represents the type of an event generated by a DAO.
type EventType int

const (
	// EventTypeCreated indicates that an object was created.
	EventTypeCreated EventType = iota

	// EventTypeUpdated indicates that an object was updated.
	EventTypeUpdated

	// EventTypeDeleted indicates that an object was deleted.
	EventTypeDeleted
)

// String generates a string representation of the event.
func (k EventType) String() string {
	switch k {
	case EventTypeCreated:
		return "Created"
	case EventTypeUpdated:
		return "Updated"
	case EventTypeDeleted:
		return "Deleted"
	default:
		return fmt.Sprintf("Unknown(%d)", k)
	}
}

// Event represents a database event with a specific kind and associated object.
type Event struct {
	// Type is the type of the event.
	Type EventType

	// Table is the name of the table.
	Table string

	// Object is the object that was created, updated or deleted.
	Object proto.Message
}

// EventCallback is a function that will be called to process an event.
type EventCallback func(ctx context.Context, event Event) error
