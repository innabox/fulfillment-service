//
// Copyright (c) 2025 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//

syntax = "proto3";

package private.v1;

import "google/protobuf/duration.proto";
import "private/v1/event_type.proto";

message EventsWatchRequest {
  optional string filter = 1;

  // Keep alive interval for the watch stream.
  //
  // If set, the server will send an empty keep alive event if the watch has been idle for more than this interval.
  // This is intended to keep the TCP connection open even if there is a proxy or firewall in the middle that drops
  // idle connections. If not set, no keep alive events will be sent.
  optional google.protobuf.Duration keep_alive = 2;
}

message EventsWatchResponse {
  Event event = 1;
}

service Events {
  rpc Watch(EventsWatchRequest) returns (stream EventsWatchResponse) {}
}
