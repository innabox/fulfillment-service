//
// Copyright (c) 2025 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//

syntax = "proto3";

package private.v1;

import "private/v1/metadata_type.proto";

// Contains the details of a hub.
message Hub {
  // Unique identifier of the hub.
  //
  // This will be automatically generated by the server when the hub is created.
  string id = 1;

  private.v1.Metadata metadata = 2;

  // The Kubeconfig containing the address and credentials that the fulfillment service will use to connect to the hub.
  bytes kubeconfig = 3;

  // Namespace where the cluster orders will be created.
  string namespace = 4;

  // List of capabilities that this hub supports.
  //
  // Possible values:
  // - "clusters": Hub can provision clusters (ClusterOrder CRDs)
  // - "virtualmachines": Hub can provision virtual machines (VirtualMachine CRDs)
  //
  // A hub can have multiple capabilities. For example, a hybrid hub might have
  // both "clusters" and "virtualmachines" capabilities.
  repeated string capabilities = 5;

  // Type of the hub indicating its primary purpose.
  //
  // Possible values:
  // - "cluster": Primarily for cluster provisioning
  // - "vmaas": Primarily for virtual machine provisioning  
  // - "hybrid": Supports both clusters and virtual machines
  //
  // This field is informational and used for categorization.
  // The actual routing decisions are based on the capabilities field.
  string hub_type = 6;
}
